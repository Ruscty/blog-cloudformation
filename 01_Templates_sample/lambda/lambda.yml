AWSTemplateFormatVersion: 2010-09-09
Description: |
  this is lambda sample templates
# パラメータ
Parameters:
# タグ
  TagKey:
    Type: String
    Description: this is tagKey
    Default: Owner
  TagValue:
    Type: String
    Description: this is tagvalue
    Default: dev
# IAM
  PolicyName:
    Type: String
    Description: this is default policy for lambda
    Default: AWSLambdaBasicExecutionRole-default
  RoleName:
    Type: String
    Description: this is default Role for lambda
    Default: functionname-role-default
# Lambda
  LambdaFunctionName:
    Type: String
    Description: input your function name
    Default: ExampleLambdaFuncitonName
  LambdaTimeout:
    Type: String
    Default: 30
  LambdaMemorySize:
    Type: Number
    MinValue: 128
    MaxValue: 3008
    Default: 128
  LambdaRunTime:
    Type: String
    Description: select your runtime
    AllowedValues: 
      - python3.8
      - nodejs14.x
      - ruby2.7
      - java11
      - go1.x
      - dotnetcore3.1
    Default: nodejs14.x

# パラメータのソート
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Policy and Role Configuration"
        Parameters:
          - PolicyName
          - RoleName
      -
        Label:
          default: "lambda Configuration"
        Parameters:
          - LambdaFunctionName
          - LambdaTimeout
          - LambdaMemorySize
          - LambdaRunTime
      -
        Label:
          default: "Tags Configuration"
        Parameters:
          - TagKey
          - TagValue

# リソース
Resources:
# ポリシー
# マネージメントコンソールから作成した場合と同様のポリシーを作成
# 主にLambda関数がcloudwatchlogsのロググループにログを格納可能にするための権限
# !Subを使用してparameterの値に対応
  LambdaPolicyID:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: this is defaut policy for lambda
      ManagedPolicyName: !Ref PolicyName
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
              Effect: Allow
              Action: 'logs:CreateLogGroup'
              Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          -
              Effect: Allow
              Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              Resource:
                  - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaFunctionName}:*

# ロール
  LambdaRoleID:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Description: this is role for lambda 
      ManagedPolicyArns:
        - !Ref LambdaPolicyID
      RoleName: !Ref RoleName
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
  
  LambdaID:
    Type: AWS::Lambda::Function
    Properties:
      Code: 
        S3Bucket: XXXX #任意で用意したS3バケット名を設定
        S3Key: XXXX/XXXX.zip #格納先のzipファイルオブジェクト名を指定する
      Description: this lambda function is created by cloudformation templates
      Environment:
        Variables:
          ENVIRONMENT_VARIABLE: variable
      FunctionName: !Ref LambdaFunctionName
      Handler: handler #関数ファイル名とコード内メソッド名を合わせること…例（ファイル名：index.js、メソッド名：handler→index.handler）
      # KmsKeyArn: String #関数の環境変数の暗号化に使用する場合にKMSのARNを入力
      MemorySize: !Ref LambdaMemorySize
      Role: !GetAtt LambdaRoleID.Arn
      Runtime: !Ref LambdaRunTime
      Tags:
        - Key: !Ref TagKey
          Value: !Ref TagValue
      Timeout: !Ref LambdaTimeout

Outputs:
  LambdaFunctionNameOutputID:
    Description: output your lambda function resources
    Value: !Ref LambdaID
    Export:
      Name: !Sub ${LambdaFunctionName}-output2
# 他のリソースベースポリシーで権限をロールごとで管理する場合のためのLambdaロールを出力
  LambdaRoleOutputID:
    Description: output your lambda function role ARN
    Value: !GetAtt LambdaRoleID.Arn
    Export:
      Name: !Sub ${RoleName}-output

  