AWSTemplateFormatVersion: 2010-09-09
Description: |
  ec2 templates
# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters:
  keyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: select keypair name

  AMI:
    Type: AWS::EC2::Image::Id
    Description: input your ami. default is Amazon Linux2
    Default: ami-0ca38c7440de1749a
    AllowedValues:
      - ami-0ca38c7440de1749a
      - ami-0bc38169aa677df2e

  InstanceType:
    Type: String
    Default: t2.micro
    AllowedValues:
      - t2.micro
      - m1.small
      - m1.large
  
  OutputVpc:
    Description: input output vpc. XXXXX is Stack Name
    Type: String
    Default: XXXXX-OutputVpcId

  OutputPublicSubnet:
    Description: input output public subnet name. XXXXX is Stack Name
    Type: String
    Default: XXXXX-OutputPublicSubnetId

# ------------------------------------------------------------#
# MetaData
# ------------------------------------------------------------# 
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "VPC and Subnet Configuration"
        Parameters:
          - keyName
          - InstanceType
      -
        Label:
          default: "Output Name Configuration"
        Parameters:
          - OutputVpc
          - OutputPublicSubnet

Resources:
# ------------------------------------------------------------#
#  EC2 Instance
# ------------------------------------------------------------#
  EC2INSTANCEID:
    Type: AWS::EC2::Instance
    Properties:
      # IamInstanceProfile: "String"
      ImageId: !Ref AMI # Linux2
      InstanceType: !Ref InstanceType
      KeyName: !Ref keyName
      NetworkInterfaces: 
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: {"Fn::ImportValue": !Sub "${OutputPublicSubnet}"}
          GroupSet:
            - !Ref EC2SECURITYGROUPID
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo yum update -y
          sudo yum install git gcc-c++ make openssl-devel
          sudo amazon-linux-extras install nginx1.12 -y
          sudo yum list installed | grep mariadb
          sudo yum remove mariadb-libs -y
          sudo yum -y install https://dev.mysql.com/get/mysql80-community-release-el7-1.noarch.rpm
          sudo yum-config-manager –enable mysql80-community -y
          sudo yum install mysql-community-server -y
          sudo systemctl start mysqld.service
          sudo systemctl enable mysqld.service
          sudo systemctl start nginx.service
          sudo systemctl enable nginx

# ------------------------------------------------------------#
#  ElasticIP
# ------------------------------------------------------------#
  EIPID:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref EC2INSTANCEID

  EIPASSOCIATIONID:
    Type: AWS::EC2::EIPAssociation
    Properties:
      AllocationId: !GetAtt EIPID.AllocationId
      InstanceId: !Ref EC2INSTANCEID

# ------------------------------------------------------------#
#  Security Group
# ------------------------------------------------------------#
# セキュリティグループ
  EC2SECURITYGROUPID:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: {"Fn::ImportValue": !Sub "${OutputVpc}"}
      GroupDescription: Ec2SecurityGroup
      GroupName: !Sub ${AWS::StackName}-Ec2SecurityGroup
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      # - IpProtocol: tcp
      #   FromPort: 80
      #   ToPort: 80
      #   CidrIp: 0.0.0.0/0
      # SecurityGroupEgress:
      # - IpProtocol: tcp
      #   FromPort: 22
      #   ToPort: 22
      #   CidrIp: 0.0.0.0/0

# ------------------------------------------------------------#
#  Outputs
# ------------------------------------------------------------#

Outputs:
  OUTPUTEC2ID:
    Description: ec2 instance id
    Value: !Ref EC2INSTANCEID
    Export: 
      Name: !Sub ${AWS::StackName}-OutputEc2InstanceId

  OUTPUTPUBLICIPID:
    Description: this is ec2 public ip address
    Value: !Ref EIPID
    Export: 
      Name: !Sub ${AWS::StackName}-OutputElasticIpId

  # OUTPUTPRIVATEIPID:
  #   Description: this is ec2 private ip address
  #   Value: !GetAtt EC2INSTANCEID.PrivateIp
  #   Export: 
  #     Name: !Sub ${AWS::StackName}-OutputPrivateIpId

  OUTPUTEC2SECURITYGROUPID:
    Description: this is ec2 security group id
    Value: !Ref EC2SECURITYGROUPID
    Export: 
      Name: !Sub ${AWS::StackName}-OutputEc2SecurityGroup


