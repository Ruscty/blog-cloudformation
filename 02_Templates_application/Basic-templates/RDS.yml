AWSTemplateFormatVersion: 2010-09-09
Description: |
  rds templates
# ------------------------------------------------------------#
# Input Parameters
# ------------------------------------------------------------# 
Parameters:

  Private1SubnetCidrBlock:
    Description: input subnet cidrblock
    Type: String
    Default: 10.0.10.0/24

  Private2SubnetCidrBlock:
    Description: input subnet cidrblock
    Type: String
    Default: 10.0.11.0/24

  Private1SubnetAvailabilityZone:
    Description: input private subnet AvailabilityZone
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-northeast-1a

  Private2SubnetAvailabilityZone:
    Description: input private subnet AvailabilityZone
    Type: AWS::EC2::AvailabilityZone::Name
    Default: ap-northeast-1c

  DBInstanceName:
    Type: String
    Default: rds
  MySQLMajorVersion:
    Type: Number
    Default: 8.0
  MySQLMinorVersion:
    Type: Number
    Default: 20
    AllowedValues:
      - 20
      - 23
  DBInstanceClass:
    Type: String
    Default: db.t2.micro
    AllowedValues:
      - db.t2.micro
      - db.m4.large
  DBInstanceStorageSize:
    Type: Number
    Description: Min20,Max16384
    Default: 20
  DBInstanceStorageType:
    Type: String
    Default: gp2
    AllowedValues:
      - standard
      - io1
      - gp2
  DBName:
    Type: String
    Default: dbname
  DBMasterUserName:
    Type: String
    Default: dbuser
    NoEcho: true
    MinLength: 1
    MaxLength: 16
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword: 
    Default: dbpassword
    NoEcho: true
    Type: String
    MinLength: 8
    MaxLength: 41
    AllowedPattern: "[a-zA-Z0-9]*"
    ConstraintDescription: must contain only alphanumeric characters.
  MultiAZ: 
    Default: false
    Type: String
    AllowedValues: 
      - true
      - false

  OutputVpc:
    Description: input output vpc. XXXXX is Stack Name
    Type: String
    Default: XXXXX-OutputVpcId

  OutputRouteTableName:
    Description: input output route table name. XXXXX is Stack Name
    Type: String
    Default: XXXXX--OutputRouteTableId

  OutputSecurityGroupIp:
    Description: input output security group id. XXXXX is Stack Name
    Type: String
    Default: XXXXX-OutputEc2SecurityGroup

    

# ------------------------------------------------------------#
# MetaData
# ------------------------------------------------------------# 
Metadata:
  "AWS::CloudFormation::Interface":
    ParameterGroups:
      - Label:
          default: "Subnet Configuration"
        Parameters:
          - Private1SubnetCidrBlock
          - Private2SubnetCidrBlock
          - Private1SubnetAvailabilityZone
          - Private2SubnetAvailabilityZone
      - Label:
          default: "RDS Configuration"
        Parameters:
          - DBInstanceName
          - MySQLMajorVersion
          - MySQLMinorVersion
          - DBInstanceClass
          - DBInstanceStorageSize
          - DBInstanceStorageType
          - DBName
          - DBMasterUserName
          - DBPassword
          - MultiAZ
      - Label:
          default: "Outputs Configuration"
        Parameters:
          - OutputVpc
          - OutputRouteTableName
          - OutputSecurityGroupIp

Resources:
# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#
# Private
  PRIVATE1SUBNETID:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref Private1SubnetAvailabilityZone
      CidrBlock: !Ref Private1SubnetCidrBlock
      VpcId: {"Fn::ImportValue": !Sub "${OutputVpc}"}

  PRIVATE1SUBNETROUTETABLEASSOCIATIONID:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: {"Fn::ImportValue": !Sub "${OutputRouteTableName}"}
      SubnetId: !Ref PRIVATE1SUBNETID

  PRIVATE2SUBNETID:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Ref Private2SubnetAvailabilityZone
      CidrBlock: !Ref Private2SubnetCidrBlock
      VpcId: {"Fn::ImportValue": !Sub "${OutputVpc}"}

  PRIVATE2SUBNETROUTETABLEASSOCIATIONID:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: {"Fn::ImportValue": !Sub "${OutputRouteTableName}"}
      SubnetId: !Ref PRIVATE2SUBNETID
# ------------------------------------------------------------#
#  DBInstance MySQL
# ------------------------------------------------------------#
  RDSID:
    Type: "AWS::RDS::DBInstance"
    Properties: 
      DBInstanceIdentifier: !Sub ${AWS::StackName}-${DBInstanceName}
      Engine: MySQL
      EngineVersion: !Sub ${MySQLMajorVersion}.${MySQLMinorVersion}
      DBInstanceClass: !Ref DBInstanceClass
      AllocatedStorage: !Ref DBInstanceStorageSize
      StorageType: !Ref DBInstanceStorageType
      DBName: !Ref DBName
      MasterUsername: !Ref DBMasterUserName
      MasterUserPassword: !Ref DBPassword
      DBSubnetGroupName: !Ref DBSUBNETGROUP
      PubliclyAccessible: false
      MultiAZ: !Ref MultiAZ
      PreferredBackupWindow: "18:00-18:30"
      PreferredMaintenanceWindow: "sat:19:00-sat:19:30"
      AutoMinorVersionUpgrade: false
      DBParameterGroupName: !Ref DBParameterGroup  
      VPCSecurityGroups:
        - !Ref RDSSECURITYGROUP
      CopyTagsToSnapshot: true
      BackupRetentionPeriod: 7
    DeletionPolicy: Delete

# ------------------------------------------------------------#
#  DBParameterGroup
# ------------------------------------------------------------#
  DBParameterGroup:
    Type: "AWS::RDS::DBParameterGroup"
    Properties:
      Family: !Sub MySQL${MySQLMajorVersion}
      Description: !Sub ${AWS::StackName}-${DBInstanceName}-param

# ------------------------------------------------------------#
#  SecurityGroup for RDS (MySQL)
# ------------------------------------------------------------#
  RDSSECURITYGROUP:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      VpcId: {"Fn::ImportValue": !Sub "${OutputVpc}"}
      GroupDescription: RdsSecurityGroup
      GroupName: !Sub ${AWS::StackName}-RdsSecurityGroup
# Rule
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: {"Fn::ImportValue": !Sub "${OutputSecurityGroupIp}"}

# ------------------------------------------------------------#
#  DBSubnetGroup
# ------------------------------------------------------------#
  DBSUBNETGROUP: 
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupName: !Sub ${AWS::StackName}-RdsSubnetSecurityGroup
      DBSubnetGroupDescription: RdsSubnetGroup
      SubnetIds: 
        - !Ref PRIVATE1SUBNETID
        - !Ref PRIVATE2SUBNETID

# ------------------------------------------------------------#
#  Outputs
# ------------------------------------------------------------#
Outputs:
  OUTPUTRDSID:
    Description: rds db instance arn
    Value: !Sub "arn:aws:rds:${AWS::Region}:${AWS::AccountId}:db:${RDSID}"
    Export: 
      Name: !Sub ${AWS::StackName}-OutputRdsId

  OUTPUTRDSENDPOINTID:
    Description: rds db end point address
    Value: !GetAtt RDSID.Endpoint.Address
    Export: 
      Name: !Sub ${AWS::StackName}-OutputRdsEndpointId